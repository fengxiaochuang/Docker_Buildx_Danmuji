# 利用GitHub Action自动构建多框架的docker镜像
name: Build_Test

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: 'Forced' 
        required: true
        default: 'true'
  # master分支的push操作会触发当前脚本的执行
  # push:
  #   branches: [ main ]
  # master分支的pr操作会触发当前脚本的执行
#  pull_request:
#    branches: [ master ]
  # 定时任务,分时日月年,为国际标准时间16点,对应中国时间0点
#  schedule:
#    - cron: '0 16 * * *'
  # 点击star时开始任务
#  watch:
#    types: started


jobs:
  Build_Test:
    # 运行在Ubuntu系统上
    runs-on: ubuntu-latest
    # 步骤
    steps:
      # 切换到主分支
      - name: Checkout
        uses: actions/checkout@main

      - name: Prepare
        id: prepare
        # IMAGE_NAME ： 镜像名称
        # VERSION ： 源码版本
        # DOCKERHUB_VERSION ： DockerHub 镜像版本
        # TAG_VERSION ： 标签版本
        # TAG_LATEST ： 最新版本
        run: |
          IMAGE_NAME=danmuji-test
          VERSION=$(curl -sX GET "https://api.github.com/repos/BanqiJane/Bilibili_Danmuji/releases/latest" | awk '/tag_name/{print $4;exit}' FS='[""]')
          DOCKERHUB_VERSION=$(cat currentVersion)
          TAG_VERSION="${{ secrets.DOCKERHUB_USERNAME }}/${IMAGE_NAME}:${VERSION}"
          TAG_LATEST="${{ secrets.DOCKERHUB_USERNAME }}/${IMAGE_NAME}:latest"
          echo ::set-output name=tag_version::${TAG_VERSION}
          echo ::set-output name=tag_latest::${TAG_LATEST}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # 初始化Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 登录到DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 初始化 JDK8 环境
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      # 使用Gradle编译构建同时命名danmuji.jar
      - name: Build with Gradle
        run: |
          sudo apt-get install git
          git clone https://github.com/BanqiJane/Bilibili_Danmuji.git
          cd Bilibili_Danmuji
          sudo chmod +x ./gradlew
          sudo ./gradlew build -x test
          sudo mv $(find build -type f -size +10M) ././danmuji.jar

      # 构建并推送
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          platforms:  linux/arm/v7
          file: ./Dockerfile.Alpine
          context: .
          push: true
          tags: |
            ${{ steps.prepare.outputs.tag_latest }}-arm32
            ${{ steps.prepare.outputs.tag_version }}-arm32

      # 构建并推送
      - name: Build and Push
        if: ${{ github.event.inputs.Forced == 'true' }}
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile.test
          context: .
          push: true
          tags: |
            ${{ steps.prepare.outputs.tag_latest }}
            ${{ steps.prepare.outputs.tag_version }}

      # 初始化版本号与git 
      - name: commit
        run: |
          echo "${{ steps.prepare.outputs.github_version }}" > currentVersion
          git config --global user.name zhaocheng
          git config --global user.email zhaocheng990105@gmail.com
          git add currentVersion
          git commit -m "当前版本是:${{ steps.prepare.outputs.github_version }}" -a
      
      # 推送版本号到GitHub 
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.TOKEN_GITHUB }}